version: "3"
networks:
  airflow_network:

services:
  postgres:
    image: postgres:13
    networks:
      - airflow_network
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      retries: 6

  operations-db:
    image: postgres:13
    networks:
      - airflow_network
    environment:
      - POSTGRES_USER=operations_user
      - POSTGRES_PASSWORD=operations_password
      - POSTGRES_DB=operations
    volumes:
      - ./operations-db-init:/docker-entrypoint-initdb.d

  airflow-init:
    image: apache/airflow:2.10.3
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=FB0o_zt4e3Ziq3LdUUO7F2Z95cvFFx16hU8jTeR1ASM=
    entrypoint: >
      bash -c "
      until nc -z postgres 5432; do
        echo 'Waiting for Postgres to be ready...';
        sleep 5;
      done;
      airflow db init &&
      airflow users create --username admin --password admin --firstname Admin --lastname Admin --role Admin --email admin@example.com
      "
    depends_on:
      postgres:
        condition: service_healthy

  airflow-webserver:
    image: apache/airflow:2.10.3
    networks:
      - airflow_network
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=FB0o_zt4e3Ziq3LdUUO7F2Z95cvFFx16hU8jTeR1ASM=
    ports:
      - "8080:8080"
    entrypoint: >
      bash -c "
      until airflow db check-migrations; do
        echo 'Waiting for Airflow migrations to complete...';
        sleep 5;
      done;
      airflow webserver
      "
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    volumes:
      - /basic-airflow/dags:/opt/airflow/dags
      - /basic-airflow/logs:/opt/airflow/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-scheduler:
    image: apache/airflow:2.10.3
    networks:
      - airflow_network
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=FB0o_zt4e3Ziq3LdUUO7F2Z95cvFFx16hU8jTeR1ASM=
    command: "airflow scheduler"
    depends_on:
      airflow-webserver:
        condition: service_healthy
    volumes:
      - /basic-airflow/dags:/opt/airflow/dags
      - /basic-airflow/logs:/opt/airflow/logs

volumes:
  postgres-data:
  operations-db-data:
